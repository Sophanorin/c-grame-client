[{"D:\\Projects21\\instagram-clone\\client\\src\\index.js":"1","D:\\Projects21\\instagram-clone\\client\\src\\store.js":"2","D:\\Projects21\\instagram-clone\\client\\src\\App.js":"3","D:\\Projects21\\instagram-clone\\client\\src\\serviceWorker.js":"4","D:\\Projects21\\instagram-clone\\client\\src\\screens\\SignInScreen.js":"5","D:\\Projects21\\instagram-clone\\client\\src\\screens\\SignUpScreen.js":"6","D:\\Projects21\\instagram-clone\\client\\src\\reducers\\userReducer.js":"7","D:\\Projects21\\instagram-clone\\client\\src\\constants\\userConstants.js":"8","D:\\Projects21\\instagram-clone\\client\\src\\actions\\userActions.js":"9","D:\\Projects21\\instagram-clone\\client\\src\\screens\\HomeScreen.js":"10","D:\\Projects21\\instagram-clone\\client\\src\\components\\Card.js":"11","D:\\Projects21\\instagram-clone\\client\\src\\screens\\ProfileScreen.js":"12","D:\\Projects21\\instagram-clone\\client\\src\\components\\Loading.js":"13","D:\\Projects21\\instagram-clone\\client\\src\\screens\\CreatePost.js":"14","D:\\Projects21\\instagram-clone\\client\\src\\actions\\postActions.js":"15","D:\\Projects21\\instagram-clone\\client\\src\\constants\\postConstants.js":"16","D:\\Projects21\\instagram-clone\\client\\src\\reducers\\postReducer.js":"17","D:\\Projects21\\instagram-clone\\client\\src\\components\\Gallery.js":"18","D:\\Projects21\\instagram-clone\\client\\src\\components\\ProfileInfo.js":"19","D:\\Projects21\\instagram-clone\\client\\src\\screens\\UserProfileScreen.js":"20","D:\\Projects21\\instagram-clone\\client\\src\\components\\PrivateRoute.js":"21","D:\\Projects21\\instagram-clone\\client\\src\\components\\TopBar.js":"22","D:\\Projects21\\instagram-clone\\client\\src\\screens\\ResetPassword.js":"23","D:\\Projects21\\instagram-clone\\client\\src\\screens\\NewPassword.js":"24"},{"size":618,"mtime":1610432017042,"results":"25","hashOfConfig":"26"},{"size":1434,"mtime":1610519159210,"results":"27","hashOfConfig":"26"},{"size":1281,"mtime":1610464697133,"results":"28","hashOfConfig":"26"},{"size":5141,"mtime":499162500000,"results":"29","hashOfConfig":"26"},{"size":5400,"mtime":1610808638727,"results":"30","hashOfConfig":"26"},{"size":5929,"mtime":1610435514237,"results":"31","hashOfConfig":"26"},{"size":3821,"mtime":1610611126756,"results":"32","hashOfConfig":"26"},{"size":1552,"mtime":1610516724476,"results":"33","hashOfConfig":"26"},{"size":7362,"mtime":1610807009051,"results":"34","hashOfConfig":"26"},{"size":1285,"mtime":1610513380145,"results":"35","hashOfConfig":"26"},{"size":7502,"mtime":1610686698757,"results":"36","hashOfConfig":"26"},{"size":1635,"mtime":1610175038525,"results":"37","hashOfConfig":"26"},{"size":674,"mtime":1609226373998,"results":"38","hashOfConfig":"26"},{"size":3323,"mtime":1609305321608,"results":"39","hashOfConfig":"26"},{"size":5335,"mtime":1610806973854,"results":"40","hashOfConfig":"26"},{"size":1248,"mtime":1610179115311,"results":"41","hashOfConfig":"26"},{"size":2764,"mtime":1610030749692,"results":"42","hashOfConfig":"26"},{"size":1223,"mtime":1610183977053,"results":"43","hashOfConfig":"26"},{"size":4476,"mtime":1610466192288,"results":"44","hashOfConfig":"26"},{"size":1750,"mtime":1610684308474,"results":"45","hashOfConfig":"26"},{"size":564,"mtime":1609854818871,"results":"46","hashOfConfig":"26"},{"size":9733,"mtime":1610687184356,"results":"47","hashOfConfig":"26"},{"size":3640,"mtime":1610468960192,"results":"48","hashOfConfig":"26"},{"size":6392,"mtime":1610599643171,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1t7gv9k",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"52"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"52"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"52"},"D:\\Projects21\\instagram-clone\\client\\src\\index.js",[],["114","115"],"D:\\Projects21\\instagram-clone\\client\\src\\store.js",[],"D:\\Projects21\\instagram-clone\\client\\src\\App.js",[],"D:\\Projects21\\instagram-clone\\client\\src\\serviceWorker.js",[],"D:\\Projects21\\instagram-clone\\client\\src\\screens\\SignInScreen.js",["116"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { signin } from \"../actions/userActions\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport Loading from \"../components/Loading\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction SignIn(props) {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo, error, loading } = userSignin;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(signin(email, password));\r\n  };\r\n  useEffect(() => {\r\n    if (userInfo) props.history.push(\"/\");\r\n  }, [dispatch, userInfo]);\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={8}\r\n            md={5}\r\n            component={Paper}\r\n            elevation={6}\r\n            square\r\n          >\r\n            <div className={classes.paper}>\r\n              <Avatar\r\n                className={classes.avatar}\r\n                src=\"https://parentzone.org.uk/sites/default/files/Instagram%20logo.jpg\"\r\n              ></Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n              </Typography>\r\n              {error && (\r\n                <Alert severity=\"error\">\r\n                  <AlertTitle>{error}</AlertTitle>\r\n                  (Error code: auth:401)\r\n                </Alert>\r\n              )}\r\n              <form\r\n                className={classes.form}\r\n                noValidate\r\n                onSubmit={submitHandler}\r\n              >\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Or Username\"\r\n                  autoComplete=\"email\"\r\n                  autoFocus\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                  label=\"Remember me\"\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                  Sign In\r\n                </Button>\r\n                <Grid container>\r\n                  <Grid item xs>\r\n                    <Link to=\"/reset\" variant=\"body2\">\r\n                      Forgot password?\r\n                    </Link>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Link to=\"/signup\" variant=\"body2\">\r\n                      {\"Don't have an account? Sign Up\"}\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n                <Box mt={5}>\r\n                  <Copyright />\r\n                </Box>\r\n              </form>\r\n            </div>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","D:\\Projects21\\instagram-clone\\client\\src\\screens\\SignUpScreen.js",["117","118"],"import React, { useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signup } from \"../actions/userActions.js\";\r\nimport Loading from \"../components/Loading.js\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n  const userSignup = useSelector((state) => state.userSignup);\r\n  const { loading, error, success } = userSignup;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const SignUpHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!name || !email || !password || !confirmpassword)\r\n      alert(\"Please!! add all the fields\");\r\n    else if (password !== confirmpassword)\r\n      alert(\"Password and ConfirmPassword are not match\");\r\n    else {\r\n      dispatch(signup(name, email, password));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (success) props.history.push(\"/signin\");\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar\r\n              className={classes.avatar}\r\n              src=\"https://parentzone.org.uk/sites/default/files/Instagram%20logo.jpg\"\r\n            ></Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign up\r\n            </Typography>\r\n            <form className={classes.form} noValidate onSubmit={SignUpHandler}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    autoComplete=\"name\"\r\n                    name=\"Name\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"Name\"\r\n                    label=\"Name\"\r\n                    autoFocus\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"confirm password\"\r\n                    label=\"Confirm Password\"\r\n                    type=\"password\"\r\n                    id=\"confirmpassword\"\r\n                    autoComplete=\"current-password\"\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\r\n                    }\r\n                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid item>\r\n                  <Link href=\"/signin\" variant=\"body2\">\r\n                    Already have an account? Sign in\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n          <Box mt={5}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","D:\\Projects21\\instagram-clone\\client\\src\\reducers\\userReducer.js",[],"D:\\Projects21\\instagram-clone\\client\\src\\constants\\userConstants.js",[],"D:\\Projects21\\instagram-clone\\client\\src\\actions\\userActions.js",["119"],"import Axios from \"axios\";\r\nimport {\r\n  USER_FOLLOW_REQUEST,\r\n  USER_FOLLOW_SUCCESS,\r\n  USER_PROFILE_FAIL,\r\n  USER_PROFILE_REQUEST,\r\n  USER_PROFILE_SUCCESS,\r\n  USER_REQUEST_RESET_PASSWORD,\r\n  USER_SEARCHING,\r\n  USER_SIGNIN_FAIL,\r\n  USER_SIGNIN_REQUEST,\r\n  USER_SIGNIN_SUCCESS,\r\n  USER_SIGNOUT,\r\n  USER_SIGNUP_FAIL,\r\n  USER_SIGNUP_REQUEST,\r\n  USER_SIGNUP_SUCCESS,\r\n  USER_UPLOAD_PROFILE_FAIL,\r\n  USER_UPLOAD_PROFILE_SUCCESS,\r\n  USER_FAIL_RESET_PASSWORD,\r\n  USER_UPDATE_PASSWORD_SUCCESS,\r\n  USER_UPDATE_PASSWORD_FAIL,\r\n  USER_UPDATED,\r\n  CHECK_TOKEN,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const signin = (email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\r\n  try {\r\n    const {\r\n      data,\r\n    } = await Axios.post(\"https://newfeed221.herokuapp.com/api/users/signin\", {\r\n      email,\r\n      password,\r\n    });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_SIGNIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const signout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_SIGNOUT });\r\n};\r\n\r\nexport const signup = (name, email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNUP_REQUEST, payload: { name, email, password } });\r\n  try {\r\n    const { data } = await Axios.post(\r\n      \"https://newfeed221.herokuapp.com/api/users/signup\",\r\n      {\r\n        name,\r\n        email,\r\n        password,\r\n      }\r\n    );\r\n    dispatch({ type: USER_SIGNUP_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_SIGNUP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const searchuser = (query) => async (dispatch) => {\r\n  try {\r\n    const { data } = await Axios.post(\r\n      `https://newfeed221.herokuapp.com/api/users/query/${query}`\r\n    );\r\n\r\n    dispatch({ type: USER_SEARCHING, payload: data });\r\n  } catch {}\r\n};\r\n\r\nexport const requestreset = (email) => async (dispatch) => {\r\n  try {\r\n    console.log(email);\r\n    const { data } = await Axios.get(\r\n      `https://newfeed221.herokuapp.com/api/users/reset-password/${email}`\r\n    );\r\n\r\n    dispatch({ type: USER_REQUEST_RESET_PASSWORD, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_FAIL_RESET_PASSWORD,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getuserprofile = (userId) => async (dispatch, getState) => {\r\n  dispatch({ type: USER_PROFILE_REQUEST });\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    const { data } = await Axios.get(\r\n      `https://newfeed221.herokuapp.com/api/users/${userId}`,\r\n      {\r\n        headers: {\r\n          authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n    );\r\n    dispatch({ type: USER_PROFILE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const follow = (followerId) => async (dispatch, getState) => {\r\n  dispatch({ type: USER_FOLLOW_REQUEST });\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    const { data } = await Axios.put(\r\n      \"https://newfeed221.herokuapp.com/api/users/follow\",\r\n      { followerId },\r\n      {\r\n        headers: {\r\n          authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n    );\r\n    dispatch({\r\n      type: USER_SIGNIN_SUCCESS,\r\n      payload: { ...userInfo, ...data.following, password: undefined },\r\n    });\r\n\r\n    localStorage.setItem(\r\n      \"userInfo\",\r\n      JSON.stringify({\r\n        ...userInfo,\r\n        followers: data.following.followers,\r\n        following: data.following.following,\r\n      })\r\n    );\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_SIGNUP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const unfollow = (followerId) => async (dispatch, getState) => {\r\n  dispatch({ type: USER_FOLLOW_REQUEST });\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    const { data } = await Axios.put(\r\n      \"https://newfeed221.herokuapp.com/api/users/unfollow\",\r\n      { followerId },\r\n      {\r\n        headers: {\r\n          authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n    );\r\n    dispatch({\r\n      type: USER_SIGNIN_SUCCESS,\r\n      payload: { ...userInfo, ...data.following, password: undefined },\r\n    });\r\n\r\n    localStorage.setItem(\r\n      \"userInfo\",\r\n      JSON.stringify({\r\n        ...userInfo,\r\n        followers: data.following.followers,\r\n        following: data.following.following,\r\n      })\r\n    );\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_SIGNUP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const uploadprofile = ({ pic }) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    const { data } = await Axios.put(\r\n      \"https://newfeed221.herokuapp.com/api/users/update\",\r\n      { pic },\r\n      {\r\n        headers: {\r\n          authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    dispatch({ type: USER_UPLOAD_PROFILE_SUCCESS, payload: data });\r\n    localStorage.setItem(\r\n      \"userInfo\",\r\n      JSON.stringify({ ...userInfo, pic: data.pic })\r\n    );\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPLOAD_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setnewpassword = (token, password) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    const { data } = await Axios.put(\r\n      \"https://newfeed221.herokuapp.com/api/users/update-password\",\r\n      {\r\n        token,\r\n        password,\r\n      }\r\n    );\r\n\r\n    dispatch({ type: USER_UPDATE_PASSWORD_SUCCESS, payload: data });\r\n\r\n    if (userInfo) {\r\n      dispatch({ type: USER_UPDATED, payload: data.user });\r\n      localStorage.setItem(\r\n        \"userInfo\",\r\n        JSON.stringify({ ...userInfo, ...data })\r\n      );\r\n    }\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PASSWORD_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const checktoken = (token) => async (dispatch) => {\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `https://newfeed221.herokuapp.com/api/users/checkToken/${token}`\r\n    );\r\n    dispatch({ type: CHECK_TOKEN, payload: data });\r\n  } catch {}\r\n};\r\n","D:\\Projects21\\instagram-clone\\client\\src\\screens\\HomeScreen.js",["120","121","122"],"import { Grid } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getallpost } from \"../actions/postActions.js\";\r\nimport Card from \"../components/Card.js\";\r\nimport Loading from \"../components/Loading.js\";\r\nimport TopBar from \"../components/TopBar.js\";\r\nfunction HomeScreen(props) {\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  if (!userInfo) props.history.push(\"/signin\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userPosts = useSelector((state) => state.userPosts);\r\n  const { error, posts } = userPosts;\r\n\r\n  const postLike = useSelector((state) => state.postLike);\r\n  const postUnlike = useSelector((state) => state.postUnlike);\r\n  const postComments = useSelector((state) => state.postComments);\r\n\r\n  useEffect(() => {\r\n    if (userInfo) dispatch(getallpost());\r\n  }, [dispatch, postLike, postUnlike, postComments]);\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      {posts && (\r\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n          {posts.map((post) => (\r\n            <Card key={post._id} {...post} />\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","D:\\Projects21\\instagram-clone\\client\\src\\components\\Card.js",["123","124"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { Button, Collapse, InputBase, Menu, MenuItem } from \"@material-ui/core\";\r\nimport ModeCommentOutlinedIcon from \"@material-ui/icons/ModeCommentOutlined\";\r\nimport Zoom from \"react-medium-image-zoom\";\r\nimport \"react-medium-image-zoom/dist/styles.css\";\r\nimport {\r\n  commentspost,\r\n  deletepost,\r\n  likepost,\r\n  unlikepost,\r\n} from \"../actions/postActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ModeComment from \"@material-ui/icons/ModeComment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { follow, unfollow } from \"../actions/userActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"50rem\",\r\n    margin: \"1rem 0rem\",\r\n  },\r\n  media: {\r\n    height: \"40rem\",\r\n    width: \"40rem\",\r\n    objectFit: \"cover\",\r\n    overflow: \"hidden\",\r\n    \"& div\": {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    objectFit: \"contain\",\r\n  },\r\n  expandOpen: {\r\n    color: \"#0ee660\",\r\n    fill: \"#0ee660\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function RecipeReviewCard(post) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const isSettingOpen = Boolean(anchorEl);\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [comment, setComment] = useState(\"\");\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  const dispatch = useDispatch();\r\n\r\n  const formateDate = () => {\r\n    var weekday = new Array();\r\n    weekday[0] = \"Sunday\";\r\n    weekday[1] = \"Monday\";\r\n    weekday[2] = \"Tuesday\";\r\n    weekday[3] = \"Wednesday\";\r\n    weekday[4] = \"Thursday\";\r\n    weekday[5] = \"Friday\";\r\n    weekday[6] = \"Saturday\";\r\n\r\n    const date = new Date(post.createdAt);\r\n    let wday = weekday[date.getUTCDay()];\r\n    let day = date.getDate();\r\n    let month = date.getMonth() + 1;\r\n    let year = date.getFullYear();\r\n\r\n    if (day < 10) day = \"0\" + day;\r\n    if (month < 10) month = \"0\" + month;\r\n\r\n    return `${wday} ,${day}-${month}-${year}`;\r\n  };\r\n\r\n  const LikeHandler = () => {\r\n    dispatch(likepost(post._id));\r\n  };\r\n\r\n  const UnlikeHandler = () => {\r\n    dispatch(unlikepost(post._id));\r\n  };\r\n\r\n  const CommentHandler = () => {\r\n    if (comment) {\r\n      dispatch(commentspost(post._id, comment));\r\n    }\r\n    setComment(\"\");\r\n  };\r\n\r\n  const DeletePostHandler = () => {\r\n    dispatch(deletepost(post._id));\r\n  };\r\n\r\n  const ExpandHandler = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n  // ------------------------ //\r\n  const OpenSetting = (e) => {\r\n    setAnchorEl(e.currentTarget);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const FollowHandler = () => {\r\n    dispatch(follow(post.postedBy._id));\r\n  };\r\n  const UnfollowHandler = () => {\r\n    dispatch(unfollow(post.postedBy._id));\r\n  };\r\n\r\n  const menuId = \"primary-setting-menu\";\r\n\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n      open={isSettingOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      {post.postedBy._id !== userInfo._id &&\r\n        (userInfo.following.includes(post.postedBy._id) ? (\r\n          <MenuItem onClick={UnfollowHandler}>Unfollow</MenuItem>\r\n        ) : (\r\n          <MenuItem onClick={FollowHandler}>Follow</MenuItem>\r\n        ))}\r\n\r\n      {post.postedBy._id === userInfo._id && (\r\n        <MenuItem onClick={DeletePostHandler}>Delete Post</MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar\r\n            aria-label=\"recipe\"\r\n            className={classes.avatar}\r\n            src={post.postedBy.pic && post.postedBy.pic}\r\n          >\r\n            {post.postedBy.name.substring(0, 1)}\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton\r\n            edge=\"end\"\r\n            aria-label=\"settings\"\r\n            aria-controls={menuId}\r\n            aria-haspopup=\"true\"\r\n            onClick={OpenSetting}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={<Link to={`/${post.postedBy._id}`}>{post.postedBy.name}</Link>}\r\n        subheader={formateDate()}\r\n      />\r\n      <div className={classes.media}>\r\n        <Zoom\r\n          zoomMargin={130}\r\n          overlayBgColorEnd=\"rgba(0,0,0,0.3)\"\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <img\r\n            src={post.photo}\r\n            alt={post.postedBy.name}\r\n            className={classes.image}\r\n          />\r\n        </Zoom>\r\n      </div>\r\n      <CardContent>\r\n        <Typography paragraph component=\"p\">\r\n          {post.caption}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        {post.likes.includes(userInfo ? userInfo._id : \" \") ? (\r\n          <IconButton aria-label=\"add to favorites\" onClick={UnlikeHandler}>\r\n            <FavoriteIcon style={{ color: \"#f54747\" }} />\r\n          </IconButton>\r\n        ) : (\r\n          <IconButton aria-label=\"add to favorites\" onClick={LikeHandler}>\r\n            <FavoriteBorderIcon />\r\n          </IconButton>\r\n        )}\r\n        <Typography variant=\"body1\" component=\"p\">\r\n          {post.likes.length} likes\r\n        </Typography>\r\n        {expanded ? (\r\n          <IconButton\r\n            className={classes.expandOpen}\r\n            aria-label=\"comment\"\r\n            onClick={ExpandHandler}\r\n          >\r\n            <ModeComment />\r\n          </IconButton>\r\n        ) : (\r\n          <IconButton aria-label=\"comment\" onClick={ExpandHandler}>\r\n            <ModeCommentOutlinedIcon />\r\n          </IconButton>\r\n        )}\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          {post.comments.length > 0 &&\r\n            post.comments.map((comment) => (\r\n              <Typography key={comment.text} variant=\"body1\" component=\"p\">\r\n                <strong>{comment.commentedBy.name}</strong> : {comment.text}\r\n              </Typography>\r\n            ))}\r\n        </CardContent>\r\n      </Collapse>\r\n      <CardActions style={{ margin: \"0rem 1rem\" }}>\r\n        <InputBase\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"Add a comments\"\r\n          classes={{\r\n            root: classes.inputRoot,\r\n            input: classes.inputInput,\r\n          }}\r\n          inputProps={{ \"aria-label\": \"comments\" }}\r\n          onChange={(e) => setComment(e.target.value)}\r\n        />\r\n        <Button style={{ color: \"#0095F6\" }} onClick={CommentHandler}>\r\n          Post\r\n        </Button>\r\n      </CardActions>\r\n      {renderMenu}\r\n    </Card>\r\n  );\r\n}\r\n","D:\\Projects21\\instagram-clone\\client\\src\\screens\\ProfileScreen.js",["125","126","127"],"import { Grid, GridList, GridListTile, makeStyles } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { mypost } from \"../actions/postActions.js\";\r\nimport Gallery from \"../components/Gallery.js\";\r\nimport Loading from \"../components/Loading.js\";\r\nimport ProfileInfo from \"../components/ProfileInfo.js\";\r\nimport TopBar from \"../components/TopBar.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"70%\",\r\n    margin: \"auto\",\r\n    minHeight: \"90vh\",\r\n  },\r\n  gallery: {\r\n    marginTop: \"4rem\",\r\n    flexGrow: 1,\r\n    \"& > img\": {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction ProfileScreen(props) {\r\n  const classes = useStyles();\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  if (!userInfo) props.history.push(\"/signin\");\r\n\r\n  const dispatch = useDispatch();\r\n  const myPosts = useSelector((state) => state.myPosts);\r\n  // const uploadedprofile = useSelector((state) => state.uploadedprofile);\r\n  // const { loading, error, uploadInfo } = uploadedprofile;\r\n  // console.log(uploadedprofile);\r\n  useEffect(() => {\r\n    dispatch(mypost());\r\n  }, [dispatch, userInfo]);\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Grid\r\n        container\r\n        className={classes.root}\r\n        direction=\"column\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <ProfileInfo {...userInfo} variant=\"owner\" number={myPosts.posts} />\r\n        <Gallery {...myPosts} />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;\r\n","D:\\Projects21\\instagram-clone\\client\\src\\components\\Loading.js",[],"D:\\Projects21\\instagram-clone\\client\\src\\screens\\CreatePost.js",[],"D:\\Projects21\\instagram-clone\\client\\src\\actions\\postActions.js",["128","129","130"],"import Axios from \"axios\";\r\nimport {\r\n  CREATE_POST_FAIL,\r\n  CREATE_POST_REQUEST,\r\n  CREATE_POST_SUCCESS,\r\n  GET_ALL_POST_REQUEST,\r\n  GET_ALL_POST_SUCCESS,\r\n  GET_ALL_POST_FAIL,\r\n  GET_MY_POST_REQUEST,\r\n  GET_MY_POST_SUCCESS,\r\n  GET_MY_POST_FAIL,\r\n  UNLIKE_POST_REQUEST,\r\n  LIKE_POST_REQUEST,\r\n  LIKE_POST_SUCCESS,\r\n  LIKE_POST_FAIL,\r\n  UNLIKE_POST_SUCCESS,\r\n  UNLIKE_POST_FAIL,\r\n  COMMENT_POST_REQUEST,\r\n  COMMENT_POST_SUCCESS,\r\n  COMMENT_POST_FAIL,\r\n  DELETE_POST_FAIL,\r\n} from \"../constants/postConstants\";\r\n\r\nexport const createpost = (post) => async (dispatch, getState) => {\r\n  dispatch({ type: CREATE_POST_REQUEST, post });\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    const { data } = await Axios.post(\r\n      \"https://newfeed221.herokuapp.com/api/post/createpost\",\r\n      post,\r\n      {\r\n        headers: {\r\n          authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n    );\r\n    dispatch({ type: CREATE_POST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CREATE_POST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getallpost = () => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    const { data } = await Axios.get(\r\n      \"https://newfeed221.herokuapp.com/api/post/allpost\",\r\n      {\r\n        headers: {\r\n          authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    dispatch({ type: GET_ALL_POST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ALL_POST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const mypost = () => async (dispatch, getState) => {\r\n  dispatch({ type: GET_MY_POST_REQUEST });\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    const { data } = await Axios(\r\n      \"https://newfeed221.herokuapp.com/api/post/mypost\",\r\n      {\r\n        headers: {\r\n          authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n    );\r\n    dispatch({ type: GET_MY_POST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_MY_POST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const likepost = (postId) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    const { data } = await Axios.put(\r\n      \"https://newfeed221.herokuapp.com/api/post/like\",\r\n      { postId },\r\n      {\r\n        headers: {\r\n          authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    dispatch({ type: LIKE_POST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LIKE_POST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const unlikepost = (postId) => async (dispatch, getState) => {\r\n  dispatch({ type: UNLIKE_POST_REQUEST });\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n\r\n    const { data } = await Axios.put(\r\n      \"https://newfeed221.herokuapp.com/api/post/unlike\",\r\n      { postId },\r\n      {\r\n        headers: {\r\n          authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n    );\r\n    dispatch({ type: UNLIKE_POST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UNLIKE_POST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const commentspost = (postId, text) => async (dispatch, getState) => {\r\n  dispatch({ type: COMMENT_POST_REQUEST });\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n\r\n    const { data } = await Axios.put(\r\n      \"https://newfeed221.herokuapp.com/api/post/comments\",\r\n      { postId, text },\r\n      {\r\n        headers: {\r\n          authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n    );\r\n    dispatch({ type: COMMENT_POST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: COMMENT_POST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deletepost = (postId) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    const { data } = await Axios.delete(\r\n      `https://newfeed221.herokuapp.com/api/post/delete/${postId}`\r\n    );\r\n    const {\r\n      userPosts: { posts },\r\n    } = getState();\r\n    const newPosts = posts.filter((post) => post._id !== data._id);\r\n    dispatch({ type: GET_ALL_POST_SUCCESS, payload: newPosts });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_POST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n",["131","132"],"D:\\Projects21\\instagram-clone\\client\\src\\constants\\postConstants.js",[],"D:\\Projects21\\instagram-clone\\client\\src\\reducers\\postReducer.js",["133"],"import {\r\n  COMMENT_POST_FAIL,\r\n  COMMENT_POST_REQUEST,\r\n  COMMENT_POST_SUCCESS,\r\n  CREATE_POST_FAIL,\r\n  CREATE_POST_REQUEST,\r\n  CREATE_POST_RESET,\r\n  CREATE_POST_SUCCESS,\r\n  GET_ALL_POST_FAIL,\r\n  GET_ALL_POST_REQUEST,\r\n  GET_ALL_POST_SUCCESS,\r\n  GET_MY_POST_FAIL,\r\n  GET_MY_POST_REQUEST,\r\n  GET_MY_POST_SUCCESS,\r\n  LIKE_POST_FAIL,\r\n  LIKE_POST_REQUEST,\r\n  LIKE_POST_SUCCESS,\r\n  POST_RESET,\r\n  UNLIKE_POST_FAIL,\r\n  UNLIKE_POST_REQUEST,\r\n  UNLIKE_POST_SUCCESS,\r\n} from \"../constants/postConstants\";\r\n\r\nexport const createpostReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CREATE_POST_REQUEST:\r\n      return { loading: true, success: false };\r\n    case CREATE_POST_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case CREATE_POST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case CREATE_POST_RESET:\r\n      return { loading: false, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getallpostReducer = (\r\n  state = { loading: true, posts: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case GET_ALL_POST_REQUEST:\r\n      return { loading: true };\r\n    case GET_ALL_POST_SUCCESS:\r\n      return { loading: false, posts: action.payload };\r\n    case GET_ALL_POST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getmypostReducer = (\r\n  state = { loading: true, posts: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case GET_MY_POST_REQUEST:\r\n      return { loading: true };\r\n    case GET_MY_POST_SUCCESS:\r\n      return { loading: false, posts: action.payload };\r\n    case GET_MY_POST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const likepostReducer = (state = { like: false }, action) => {\r\n  switch (action.type) {\r\n    case LIKE_POST_SUCCESS:\r\n      return { liked: true, post: action.payload };\r\n    case LIKE_POST_FAIL:\r\n      return { success: false, error: action.payload };\r\n    case POST_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const unlikepostReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case UNLIKE_POST_REQUEST:\r\n      return { loading: true };\r\n    case UNLIKE_POST_SUCCESS:\r\n      return { loading: false, post: action.payload };\r\n    case UNLIKE_POST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const commentpostReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case COMMENT_POST_REQUEST:\r\n      return { loading: true };\r\n    case COMMENT_POST_SUCCESS:\r\n      return { loading: false, post: action.payload };\r\n    case COMMENT_POST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\Projects21\\instagram-clone\\client\\src\\components\\Gallery.js",["134","135","136","137","138"],"import { Grid, GridList, GridListTile, makeStyles } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { mypost } from \"../actions/postActions.js\";\r\nimport Loading from \"../components/Loading.js\";\r\nconst useStyle = makeStyles({\r\n  gallery: {\r\n    marginTop: \"4rem\",\r\n    flexGrow: 1,\r\n    \"& > img\": {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n  },\r\n  image: {\r\n    boxShadow: \"0 0 20px rgba(0,0,0,0.2),0 0 40px rgba(0,0,0,0.3)\",\r\n    maxWidth: \"100%\",\r\n    \"& > img\": {\r\n      minWidth: \"100%\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction Gallery(myPosts) {\r\n  const classes = useStyle();\r\n\r\n  const { error, loading, posts } = myPosts;\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <Grid container item xs={12} className={classes.gallery}>\r\n          <GridList cellHeight={300} cols={3}>\r\n            {posts.map((post) => (\r\n              <GridListTile key={post._id} className={classes.image}>\r\n                <img src={post.photo} alt={post.caption} />\r\n              </GridListTile>\r\n            ))}\r\n          </GridList>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Gallery;\r\n","D:\\Projects21\\instagram-clone\\client\\src\\components\\ProfileInfo.js",["139","140","141","142","143","144","145","146","147","148","149","150","151"],"import {\r\n  Avatar,\r\n  Button,\r\n  FormLabel,\r\n  Grid,\r\n  Input,\r\n  makeStyles,\r\n  Typography,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { follow, unfollow, uploadprofile } from \"../actions/userActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  profile: {\r\n    top: 0,\r\n    height: \"30vh\",\r\n    borderBottom: \"1px solid #000\",\r\n    marginBottom: 0,\r\n  },\r\n  profile_image: {\r\n    height: theme.spacing(20),\r\n    width: theme.spacing(20),\r\n    [theme.breakpoints.down(\"730\")]: {\r\n      height: theme.spacing(15),\r\n      width: theme.spacing(15),\r\n    },\r\n  },\r\n  info: {\r\n    marginLeft: \"2rem\",\r\n    \"& > *\": {\r\n      marginTop: \"0.5rem\",\r\n    },\r\n  },\r\n  follows: {\r\n    \"& > span \": { marginRight: \"2rem\" },\r\n  },\r\n  botton: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(\"#0095F6\"),\r\n    backgroundColor: \"#0095F6\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#0078c7\",\r\n    },\r\n  },\r\n}))(Button);\r\nfunction ProfileInfo(user) {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pic, setPic] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const FollowHandler = () => {\r\n    dispatch(follow(user._id));\r\n  };\r\n  const UnfollowHandler = () => {\r\n    dispatch(unfollow(user._id));\r\n  };\r\n\r\n  const UploadImage = async (e) => {\r\n    const image = e.target.files[0];\r\n    const info = new FormData();\r\n    info.append(\"file\", image);\r\n    info.append(\"upload_preset\", \"kxiv2d2e\");\r\n    info.append(\"cloud_name\", \"Rinnn\");\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"https://api.cloudinary.com/v1_1/lecloud/image/upload\",\r\n        info\r\n      );\r\n      if (data) {\r\n        setPic(data.secure_url);\r\n        dispatch(uploadprofile({ pic: data.secure_url }));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container item className={classes.profile}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={4}\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        direction=\"column\"\r\n      >\r\n        <Avatar\r\n          className={classes.profile_image}\r\n          src={user.pic}\r\n          alt=\"any name\"\r\n        ></Avatar>\r\n        {user.variant === \"owner\" && (\r\n          <div>\r\n            <input\r\n              id=\"file\"\r\n              type=\"file\"\r\n              className=\"upload-image\"\r\n              accept=\"image/*\"\r\n              onChange={UploadImage}\r\n            ></input>\r\n            <label htmlFor=\"file\" className=\"label-upload\">\r\n              Change Profile\r\n            </label>\r\n          </div>\r\n        )}\r\n      </Grid>\r\n      <Grid container item xs={8}>\r\n        <Grid\r\n          container\r\n          item\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"flex-start\"\r\n          className={classes.info}\r\n        >\r\n          <Typography className={classes.profile_name} variant=\"h5\">\r\n            {user.name}\r\n          </Typography>\r\n          <Typography className={classes.profile_name} variant=\"h6\">\r\n            {user.email}\r\n          </Typography>\r\n          <Typography className={classes.follows}>\r\n            <span>{user.number ? user.number.length : 0} posts</span>{\" \"}\r\n            <span>\r\n              {user.followers ? user.followers.length : \"0\"} followers\r\n            </span>{\" \"}\r\n            <span>\r\n              {user.following ? user.following.length : \"0\"} following\r\n            </span>\r\n          </Typography>\r\n          {user.variant !== \"owner\" &&\r\n            (user.followers && user.followers.includes(user.__id) ? (\r\n              <ColorButton\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={UnfollowHandler}\r\n              >\r\n                Unfollow\r\n              </ColorButton>\r\n            ) : (\r\n              <ColorButton\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={FollowHandler}\r\n              >\r\n                Follow\r\n              </ColorButton>\r\n            ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;\r\n","D:\\Projects21\\instagram-clone\\client\\src\\screens\\UserProfileScreen.js",["152","153","154","155"],"import { Grid, GridList, GridListTile, makeStyles } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getuserprofile } from \"../actions/userActions.js\";\r\nimport Gallery from \"../components/Gallery.js\";\r\nimport Loading from \"../components/Loading.js\";\r\nimport ProfileInfo from \"../components/ProfileInfo.js\";\r\nimport TopBar from \"../components/TopBar.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"70%\",\r\n    margin: \"auto\",\r\n    minHeight: \"90vh\",\r\n  },\r\n  gallery: {\r\n    marginTop: \"4rem\",\r\n    flexGrow: 1,\r\n    \"& > img\": {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction UserProfileScreen(props) {\r\n  const classes = useStyles();\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  // if (!userInfo) props.history.push(\"/signin\");\r\n\r\n  const id = props.match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n  const userProfile = useSelector((state) => state.userProfile);\r\n  //optimize here next time\r\n  const { loading, error, posts, user } = userProfile;\r\n\r\n  useEffect(() => {\r\n    dispatch(getuserprofile(id));\r\n  }, [dispatch, userSignin, id]);\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Grid\r\n        container\r\n        className={classes.root}\r\n        direction=\"column\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <ProfileInfo\r\n          {...user}\r\n          variant={user && id === userInfo._id ? \"owner\" : \"user\"}\r\n          number={posts}\r\n          __id={userInfo._id}\r\n        />\r\n        <Gallery posts={posts} loading={loading} />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserProfileScreen;\r\n","D:\\Projects21\\instagram-clone\\client\\src\\components\\PrivateRoute.js",[],"D:\\Projects21\\instagram-clone\\client\\src\\components\\TopBar.js",["156","157","158","159","160","161","162","163","164","165","166","167"],"import React, { useEffect, useState } from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { searchuser, signout } from \"../actions/userActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    position: \"sticky\",\r\n    top: 0,\r\n    zIndex: \"1\",\r\n  },\r\n  bar: {\r\n    width: \"80%\",\r\n    margin: \"auto\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    color: \"white\",\r\n    display: \"none\",\r\n    fontFamily: \"Grand Hotel, cursive\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  search: {\r\n    flexGrow: 1,\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    marginRight: theme.spacing(4),\r\n    marginLeft: theme.spacing(4),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: \"100%\",\r\n    },\r\n    overFlow: \"hidden\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"95%\",\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    \"& > div\": {\r\n      border: \"2px solid white\",\r\n      color: \"inherit\",\r\n    },\r\n    // vertical padding + font size from searchIcon\r\n  },\r\n  inputInput: {\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    flexGrow: 1,\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const dispatch = useDispatch();\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  const SearchingUser = useSelector((state) => state.SearchingUser);\r\n  const { searchingResult } = SearchingUser;\r\n\r\n  //error!!!!!!!!\r\n  //console.log(searchingResult);\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const searching = (query) => {\r\n    dispatch(searchuser(query));\r\n  };\r\n\r\n  const ProfileHandler = () => {\r\n    history.push(\"/profile\");\r\n    handleMenuClose();\r\n  };\r\n  const LogoutHandler = () => {\r\n    history.push(\"/signin\");\r\n    dispatch(signout());\r\n  };\r\n\r\n  const SearchHandler = (e) => searching(e.target.value);\r\n\r\n  const BroweUserHandler = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      console.log(e.target.value);\r\n      const user = searchingResult.filter(\r\n        (user) => user.name === e.target.value\r\n      );\r\n      console.log(e);\r\n      if (user) history.push(`/${user[0]._id}`);\r\n    }\r\n  };\r\n\r\n  // const menuId = \"primary-search-account-menu\";\r\n  // const renderMenu = (\r\n  //   <Menu\r\n  //     anchorEl={anchorEl}\r\n  //     anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n  //     id={menuId}\r\n  //     keepMounted\r\n  //     transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n  //     open={isMenuOpen}\r\n  //     onClose={handleMenuClose}\r\n  //   >\r\n  //     <MenuItem onClick={ProfileHandler}>Profile</MenuItem>\r\n  //     <MenuItem onClick={LogoutHandler}>Logout</MenuItem>\r\n  //   </Menu>\r\n  // );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem> */}\r\n      <MenuItem>\r\n        <Link to=\"/post\">\r\n          <IconButton\r\n            aria-label=\"create-post\"\r\n            aria-controls=\"primary-search-account-menu\"\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n          >\r\n            <CreateIcon />\r\n          </IconButton>\r\n        </Link>\r\n        <p>Create Post</p>\r\n      </MenuItem>\r\n\r\n      <MenuItem onClick={ProfileHandler}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={LogoutHandler}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <ExitToAppIcon />\r\n        </IconButton>\r\n        <p>Logout</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/signin\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"sticky\">\r\n        <Toolbar className={classes.bar}>\r\n          <Link to=\"/\">\r\n            <Typography variant=\"h4\" className={classes.title}>\r\n              Instagram\r\n            </Typography>\r\n          </Link>\r\n          <div className={classes.search}>\r\n            <Autocomplete\r\n              freeSolo\r\n              disableClearable\r\n              autoComplete\r\n              autoHighlight\r\n              autoSelect\r\n              options={searchingResult.map((option) => option.name)}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  classes={{\r\n                    root: classes.inputRoot,\r\n                  }}\r\n                  margin=\"dense\"\r\n                  placeholder=\"Search\"\r\n                  variant=\"outlined\"\r\n                  onChange={SearchHandler}\r\n                  onKeyDown={BroweUserHandler}\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n\r\n          <div className={classes.sectionDesktop}>\r\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n            <Link to=\"/post\">\r\n              <IconButton\r\n                aria-label=\"show 17 new notifications\"\r\n                style={{ color: \"#fff\" }}\r\n              >\r\n                <CreateIcon />\r\n              </IconButton>\r\n            </Link>\r\n\r\n            <IconButton\r\n              aria-label=\"profile\"\r\n              onClick={ProfileHandler}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n\r\n            <IconButton\r\n              onClick={LogoutHandler}\r\n              aria-label=\"logout\"\r\n              color=\"inherit\"\r\n            >\r\n              <ExitToAppIcon />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects21\\instagram-clone\\client\\src\\screens\\ResetPassword.js",["168","169","170","171"],"import React, { useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { requestreset, signup } from \"../actions/userActions.js\";\r\nimport Loading from \"../components/Loading.js\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function ResetPassword(props) {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const ResetPassword = useSelector((state) => state.ResetPassword);\r\n  const { error, message } = ResetPassword;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const RequestResetHalder = (e) => {\r\n    e.preventDefault();\r\n    if (email) dispatch(requestreset(email));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (message) alert(message.message);\r\n    if (error) alert(error.error);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src=\"https://parentzone.org.uk/sites/default/files/Instagram%20logo.jpg\"\r\n          ></Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Reset Password\r\n          </Typography>\r\n          <form\r\n            className={classes.form}\r\n            noValidate\r\n            onSubmit={RequestResetHalder}\r\n          >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Send\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/signin\" variant=\"body2\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={5}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\Projects21\\instagram-clone\\client\\src\\screens\\NewPassword.js",["172","173","174","175","176","177","178","179","180","181"],"import React, { useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  checktoken,\r\n  requestreset,\r\n  setnewpassword,\r\n  signup,\r\n  uploadprofile,\r\n} from \"../actions/userActions.js\";\r\nimport Loading from \"../components/Loading.js\";\r\nimport { RESET_STATE } from \"../constants/userConstants.js\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function NewPassword(props) {\r\n  const classes = useStyles();\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassowrd, setConfirmPassword] = useState(\"\");\r\n\r\n  const UpdatedPassword = useSelector((state) => state.UpdatedPassword);\r\n  const { message, error, success, user } = UpdatedPassword;\r\n\r\n  const expireToken = useSelector((state) => state.expireToken);\r\n  const { expire } = expireToken;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const token = props.match.params.token;\r\n\r\n  const ResetPasswordHandler = (e) => {\r\n    e.preventDefault();\r\n    if (newPassword !== confirmPassowrd) alert(\"Both password aren't matching\");\r\n    else {\r\n      dispatch(setnewpassword(token, newPassword));\r\n    }\r\n  };\r\n\r\n  const PustToSigninHandler = () => {\r\n    props.history.replace(\"/signin\");\r\n  };\r\n\r\n  const PustToRequestHandler = () => {\r\n    props.history.replace(\"/reset\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      if (user) {\r\n        dispatch({ type: RESET_STATE });\r\n        props.history.push(\"/signin\");\r\n      }\r\n    }\r\n    dispatch(checktoken(token));\r\n  }, [dispatch, token, user]);\r\n\r\n  return (\r\n    <>\r\n      {expire !== undefined ? (\r\n        expire ? (\r\n          <>\r\n            <Dialog\r\n              open={expire}\r\n              TransitionComponent={Transition}\r\n              keepMounted\r\n              aria-labelledby=\"alert-dialog-slide-title\"\r\n              aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-slide-title\">\r\n                {\"Link Request Reset Password expired.\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                  Your link was requested is expired. Please make a request\r\n                  again.\r\n                  <br />\r\n                  To make a new request, Click Ok.\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={PustToRequestHandler} color=\"primary\">\r\n                  Ok\r\n                </Button>\r\n                <Button onClick={PustToSigninHandler} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </>\r\n        ) : (\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n              <Avatar\r\n                className={classes.avatar}\r\n                src=\"https://parentzone.org.uk/sites/default/files/Instagram%20logo.jpg\"\r\n              ></Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                New Password\r\n              </Typography>\r\n              <form\r\n                className={classes.form}\r\n                noValidate\r\n                onSubmit={ResetPasswordHandler}\r\n              >\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"new-password\"\r\n                      label=\"New Password\"\r\n                      name=\"new-password\"\r\n                      type=\"password\"\r\n                      onChange={(e) => setNewPassword(e.target.value)}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      name=\"confirm-password\"\r\n                      label=\"Confirm Password\"\r\n                      type=\"password\"\r\n                      id=\"confirmpassword\"\r\n                      autoComplete=\"current-password\"\r\n                      onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                  Send\r\n                </Button>\r\n              </form>\r\n            </div>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </Container>\r\n        )\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n",{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":78,"column":6,"nodeType":"188","endLine":78,"endColumn":26,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":11,"column":8,"nodeType":"192","messageId":"193","endLine":11,"endColumn":24},{"ruleId":"190","severity":1,"message":"194","line":57,"column":20,"nodeType":"192","messageId":"193","endLine":57,"endColumn":25},{"ruleId":"190","severity":1,"message":"195","line":4,"column":3,"nodeType":"192","messageId":"193","endLine":4,"endColumn":22},{"ruleId":"190","severity":1,"message":"196","line":6,"column":8,"nodeType":"192","messageId":"193","endLine":6,"endColumn":15},{"ruleId":"190","severity":1,"message":"194","line":16,"column":11,"nodeType":"192","messageId":"193","endLine":16,"endColumn":16},{"ruleId":"186","severity":1,"message":"197","line":24,"column":6,"nodeType":"188","endLine":24,"endColumn":52,"suggestions":"198"},{"ruleId":"190","severity":1,"message":"199","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":26},{"ruleId":"200","severity":1,"message":"201","line":69,"column":19,"nodeType":"202","messageId":"203","endLine":69,"endColumn":30},{"ruleId":"190","severity":1,"message":"204","line":1,"column":16,"nodeType":"192","messageId":"193","endLine":1,"endColumn":24},{"ruleId":"190","severity":1,"message":"205","line":1,"column":26,"nodeType":"192","messageId":"193","endLine":1,"endColumn":38},{"ruleId":"190","severity":1,"message":"196","line":6,"column":8,"nodeType":"192","messageId":"193","endLine":6,"endColumn":15},{"ruleId":"190","severity":1,"message":"206","line":6,"column":3,"nodeType":"192","messageId":"193","endLine":6,"endColumn":23},{"ruleId":"190","severity":1,"message":"207","line":13,"column":3,"nodeType":"192","messageId":"193","endLine":13,"endColumn":20},{"ruleId":"190","severity":1,"message":"208","line":189,"column":21,"nodeType":"192","messageId":"193","endLine":189,"endColumn":29},{"ruleId":"182","replacedBy":"209"},{"ruleId":"184","replacedBy":"210"},{"ruleId":"190","severity":1,"message":"207","line":16,"column":3,"nodeType":"192","messageId":"193","endLine":16,"endColumn":20},{"ruleId":"190","severity":1,"message":"199","line":2,"column":17,"nodeType":"192","messageId":"193","endLine":2,"endColumn":26},{"ruleId":"190","severity":1,"message":"211","line":3,"column":10,"nodeType":"192","messageId":"193","endLine":3,"endColumn":21},{"ruleId":"190","severity":1,"message":"212","line":3,"column":23,"nodeType":"192","messageId":"193","endLine":3,"endColumn":34},{"ruleId":"190","severity":1,"message":"213","line":4,"column":10,"nodeType":"192","messageId":"193","endLine":4,"endColumn":16},{"ruleId":"190","severity":1,"message":"194","line":27,"column":11,"nodeType":"192","messageId":"193","endLine":27,"endColumn":16},{"ruleId":"190","severity":1,"message":"214","line":4,"column":3,"nodeType":"192","messageId":"193","endLine":4,"endColumn":12},{"ruleId":"190","severity":1,"message":"215","line":6,"column":3,"nodeType":"192","messageId":"193","endLine":6,"endColumn":8},{"ruleId":"190","severity":1,"message":"199","line":12,"column":17,"nodeType":"192","messageId":"193","endLine":12,"endColumn":26},{"ruleId":"190","severity":1,"message":"212","line":13,"column":23,"nodeType":"192","messageId":"193","endLine":13,"endColumn":34},{"ruleId":"190","severity":1,"message":"216","line":56,"column":10,"nodeType":"192","messageId":"193","endLine":56,"endColumn":14},{"ruleId":"190","severity":1,"message":"217","line":56,"column":16,"nodeType":"192","messageId":"193","endLine":56,"endColumn":23},{"ruleId":"190","severity":1,"message":"218","line":57,"column":10,"nodeType":"192","messageId":"193","endLine":57,"endColumn":15},{"ruleId":"190","severity":1,"message":"219","line":57,"column":17,"nodeType":"192","messageId":"193","endLine":57,"endColumn":25},{"ruleId":"190","severity":1,"message":"220","line":58,"column":10,"nodeType":"192","messageId":"193","endLine":58,"endColumn":13},{"ruleId":"190","severity":1,"message":"221","line":59,"column":10,"nodeType":"192","messageId":"193","endLine":59,"endColumn":18},{"ruleId":"190","severity":1,"message":"222","line":59,"column":20,"nodeType":"192","messageId":"193","endLine":59,"endColumn":31},{"ruleId":"190","severity":1,"message":"223","line":60,"column":10,"nodeType":"192","messageId":"193","endLine":60,"endColumn":25},{"ruleId":"190","severity":1,"message":"224","line":60,"column":27,"nodeType":"192","messageId":"193","endLine":60,"endColumn":45},{"ruleId":"190","severity":1,"message":"204","line":1,"column":16,"nodeType":"192","messageId":"193","endLine":1,"endColumn":24},{"ruleId":"190","severity":1,"message":"205","line":1,"column":26,"nodeType":"192","messageId":"193","endLine":1,"endColumn":38},{"ruleId":"190","severity":1,"message":"196","line":6,"column":8,"nodeType":"192","messageId":"193","endLine":6,"endColumn":15},{"ruleId":"190","severity":1,"message":"194","line":39,"column":20,"nodeType":"192","messageId":"193","endLine":39,"endColumn":25},{"ruleId":"190","severity":1,"message":"225","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":14},{"ruleId":"190","severity":1,"message":"226","line":7,"column":8,"nodeType":"192","messageId":"193","endLine":7,"endColumn":17},{"ruleId":"190","severity":1,"message":"227","line":8,"column":8,"nodeType":"192","messageId":"193","endLine":8,"endColumn":13},{"ruleId":"190","severity":1,"message":"228","line":11,"column":8,"nodeType":"192","messageId":"193","endLine":11,"endColumn":16},{"ruleId":"190","severity":1,"message":"229","line":12,"column":8,"nodeType":"192","messageId":"193","endLine":12,"endColumn":18},{"ruleId":"190","severity":1,"message":"230","line":14,"column":8,"nodeType":"192","messageId":"193","endLine":14,"endColumn":16},{"ruleId":"190","severity":1,"message":"231","line":15,"column":8,"nodeType":"192","messageId":"193","endLine":15,"endColumn":25},{"ruleId":"190","severity":1,"message":"232","line":101,"column":9,"nodeType":"192","messageId":"193","endLine":101,"endColumn":19},{"ruleId":"190","severity":1,"message":"233","line":103,"column":10,"nodeType":"192","messageId":"193","endLine":103,"endColumn":15},{"ruleId":"190","severity":1,"message":"234","line":103,"column":17,"nodeType":"192","messageId":"193","endLine":103,"endColumn":25},{"ruleId":"190","severity":1,"message":"235","line":113,"column":9,"nodeType":"192","messageId":"193","endLine":113,"endColumn":30},{"ruleId":"186","severity":1,"message":"236","line":242,"column":6,"nodeType":"188","endLine":242,"endColumn":8,"suggestions":"237"},{"ruleId":"190","severity":1,"message":"238","line":6,"column":8,"nodeType":"192","messageId":"193","endLine":6,"endColumn":24},{"ruleId":"190","severity":1,"message":"239","line":7,"column":8,"nodeType":"192","messageId":"193","endLine":7,"endColumn":16},{"ruleId":"190","severity":1,"message":"240","line":15,"column":24,"nodeType":"192","messageId":"193","endLine":15,"endColumn":30},{"ruleId":"190","severity":1,"message":"196","line":16,"column":8,"nodeType":"192","messageId":"193","endLine":16,"endColumn":15},{"ruleId":"190","severity":1,"message":"238","line":6,"column":8,"nodeType":"192","messageId":"193","endLine":6,"endColumn":24},{"ruleId":"190","severity":1,"message":"239","line":7,"column":8,"nodeType":"192","messageId":"193","endLine":7,"endColumn":16},{"ruleId":"190","severity":1,"message":"241","line":8,"column":8,"nodeType":"192","messageId":"193","endLine":8,"endColumn":12},{"ruleId":"190","severity":1,"message":"242","line":17,"column":3,"nodeType":"192","messageId":"193","endLine":17,"endColumn":15},{"ruleId":"190","severity":1,"message":"240","line":19,"column":3,"nodeType":"192","messageId":"193","endLine":19,"endColumn":9},{"ruleId":"190","severity":1,"message":"243","line":20,"column":3,"nodeType":"192","messageId":"193","endLine":20,"endColumn":16},{"ruleId":"190","severity":1,"message":"196","line":22,"column":8,"nodeType":"192","messageId":"193","endLine":22,"endColumn":15},{"ruleId":"190","severity":1,"message":"244","line":73,"column":11,"nodeType":"192","messageId":"193","endLine":73,"endColumn":18},{"ruleId":"190","severity":1,"message":"194","line":73,"column":20,"nodeType":"192","messageId":"193","endLine":73,"endColumn":25},{"ruleId":"186","severity":1,"message":"245","line":106,"column":6,"nodeType":"188","endLine":106,"endColumn":29,"suggestions":"246"},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["249"],"no-unused-vars","'LockOutlinedIcon' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'USER_FOLLOW_SUCCESS' is defined but never used.","'Loading' is defined but never used.","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["250"],"'useEffect' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'GET_ALL_POST_REQUEST' is defined but never used.","'LIKE_POST_REQUEST' is defined but never used.","'userInfo' is assigned a value but never used.",["247"],["248"],"'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'mypost' is defined but never used.","'FormLabel' is defined but never used.","'Input' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'pic' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'setConfirmPassword' is assigned a value but never used.","'fade' is defined but never used.","'InputBase' is defined but never used.","'Badge' is defined but never used.","'MenuIcon' is defined but never used.","'SearchIcon' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'isMenuOpen' is assigned a value but never used.","'query' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'handleProfileMenuOpen' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["251"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'signup' is defined but never used.","'Link' is defined but never used.","'requestreset' is defined but never used.","'uploadprofile' is defined but never used.","'message' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'success'. Either include them or remove the dependency array.",["252"],"no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},"Update the dependencies array to be: [dispatch, props.history, userInfo]",{"range":"261","text":"262"},"Update the dependencies array to be: [dispatch, postLike, postUnlike, postComments, userInfo]",{"range":"263","text":"264"},"Update the dependencies array to be: [history, userInfo]",{"range":"265","text":"266"},"Update the dependencies array to be: [dispatch, props.history, success, token, user]",{"range":"267","text":"268"},[2352,2372],"[dispatch, props.history, userInfo]",[923,969],"[dispatch, postLike, postUnlike, postComments, userInfo]",[7048,7050],"[history, userInfo]",[3001,3024],"[dispatch, props.history, success, token, user]"]